%YAML:1.0

#common parameters
imu_topic: "/camera/imu"
image_topic: "/camera/fisheye1/image_raw"
output_dir: "~/data/output/"

#camera calibration  pinhole MEI pinhole-radtan  radtan  camera KANNALA_BRANDT   kannala_brandt
model_type: KANNALA_BRANDT
camera_name: camera
image_width: 848
image_height: 800
projection_parameters:
   k2: -0.020187438716951767
   k3: 0.07597882337369236
   k4: -0.07574008573664168
   k5: 0.01927710119391647
   mu: 285.6425
   mv: 285.7369
   u0: 412.8582
   v0: 389.4398

gnss_enable: 0
gnss_meas_topic: "/ublox_driver/range_meas"           # GNSS raw measurement topic
gnss_ephem_topic: "/ublox_driver/ephem"               # GPS, Galileo, BeiDou ephemeris
gnss_glo_ephem_topic: "/ublox_driver/glo_ephem"       # GLONASS ephemeris
gnss_iono_params_topic: "/ublox_driver/iono_params"   # GNSS broadcast ionospheric parameters
gnss_tp_info_topic: "/ublox_driver/time_pulse_info"   # PPS time info
gnss_elevation_thres: 30            # satellite elevation threshold (degree)
gnss_psr_std_thres: 2.0             # pseudo-range std threshold
gnss_dopp_std_thres: 2.0            # doppler std threshold
gnss_track_num_thres: 20            # number of satellite tracking epochs before entering estimator
gnss_ddt_sigma: 0.1

gnss_local_online_sync: 0                       # if perform online synchronization betwen GNSS and local time
local_trigger_info_topic: "/external_trigger"   # external trigger info of the local sensor, if `gnss_local_online_sync` is 1
gnss_local_time_diff: 18.0                    # difference between GNSS and local time (s), if `gnss_local_online_sync` is 0  -18.52 

gnss_iono_default_parameters: !!opencv-matrix
   rows: 1
   cols: 8
   dt: d
   data: [0.1118E-07,  0.2235E-07, -0.4172E-06,  0.6557E-06,
          0.1249E+06, -0.4424E+06,  0.1507E+07, -0.2621E+06]

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.9999692083867874,  0.004576401703026137,  0.006374858881056461,
           -0.004589938478710711,  -0.9999872391440922 ,  -0.0021104534434409285, 
           0.006365119249668129,  -0.0021396486692493075,  0.999977453326078]


#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   #data: [-0.0759472920952561, -0.0039320527565750, -0.0016395029500217]
   data: [-0.008815238351174898, 0.00016194272725525132, 0.04588104200198628]


#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

# #imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.004        # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.02         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 0.0002    # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805    # gravity magnitude



acc_n: 2.075080823822040902e-02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 1.50106951723e-03       # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 3.9192531443154894e-04        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.23378327676e-05      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805     # gravity magnitude

# acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805    # gravity magnitude

# acc_n: 0.066952452471          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.005148030141        # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.000099999997474        # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 0.00000499999999       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805     # gravity magnitude


# acc_n: 0.066952452471          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.005148030141        # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.0099999997474        # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 0.000499999999       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
